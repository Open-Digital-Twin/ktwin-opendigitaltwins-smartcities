{
    "@id": "ngsi_ld:city:BoatPlacePricing",
    "@type": "Interface",
    "displayName": "Boat Place pricing",
    "description": "Global description: Work in progress for boat place pricing. Bases on sample at https://github.com/smart-data-models/dataModel.Ports/blob/master/BoatPlacesPricing/examples/example.json",
    "comment": "No official specification available yet",
    "extends": "ngsi_ld:city:NGSILDBaseModel",
    "contents": [
        {
            "@type": "Property",
            "name": "areaServed",
            "displayName": "Area served",
            "description": "The geographic area where a service or offered item is provided",
            "schema": "string",
            "writable": true
        },
        {
            "@type": "Property",
            "name": "dateLastReported",
            "displayName": "Date last reported",
            "description": "The date and time of this report in ISO8601 UTC format. It can be represented by a specific time instant or by an ISO8601 interval",
            "comment": "Required property",
            "schema": "dateTime",
            "writable": true
        },
        {
            "@type": "Relationship",
            "name": "refSeaPort",
            "description": "Port that belongs to",
            "displayName": "belongs to",
            "comment": "Required relationship",
            "target": "ngsi_ld:city:SeaportFacilities",
            "minMultiplicity": 0,
            "maxMultiplicity": 1,
            "writable": true
        },
        {
            "@type": "Relationship",
            "name": "refPointOfInterest",
            "description": "Point of Interest that the element has relation to",
            "displayName": "related to",
            "target": "ngsi_ld:city:PointOfInterest",
            "minMultiplicity": 0,
            "maxMultiplicity": 1,
            "writable": true
        },
        {
            "@type": "Property",
            "name": "spotCategoryRange",
            "displayName": "Spot category range",
            "description": "List from the lowest to the highest categories: A combination of the items listed. Enum:'A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T1, T2, U, V, W, X, Y, Z, Z01, Z02, Z03, Z04, Z05, Z06, Z07, Z08, Z08, Z09, Z10, Z11, Z12, Z13, Z14, Z15, Z16, Z17'",
            "comment": "Required property. Since DTDLv2 doesn't support arrays for Properties, a single string will be used.",
            "schema": "string",
            "writable": true
        },
        {
            "@type": "Property",
            "name": "maxDraft",
            "description": "Maximum draft allowed to access the harbor. The unit code (text) is given using the UN/CEFACT Common Codes . For instance, MTR represents Meter",
            "schema": "double",
            "displayName": "Maximum draft allowed",
            "writable": true
        },
        {
            "@type": "Property",
            "name" : "maxLength",
            "displayName": "Maximum length allowed",
            "description": "Maximum length allowed to access the harbor. The unit code (text) is given using the UN/CEFACT Common Codes. For instance, MTR represents Meter",
            "schema": "double",
            "unit": "metre",
            "writable": true
        },
        {
            "@type": "Property",
            "name" : "minLength",
            "displayName": "Minimum Length",
            "description": "Minimum length allowed to access the harbor. The unit code (text) is given using the UN/CEFACT Common Codes. For instance, MTR represents Meter",
            "schema": "double",
            "unit": "metre",
            "writable": true
        },
        {
            "@type": "Property",
            "name" : "maxWidth",
            "displayName": "Maximum width allowed",
            "description": "Maximum width allowed to access the harbor. The unit code (text) is given using the UN/CEFACT Common Codes . For instance, MTR represents Meter",
            "schema": "double",
            "unit": "metre",
            "writable": true
        },
        {
            "@type": "Property",
            "name": "validFrom",
            "displayName": "Valid from",
            "comment": "Required property",
            "schema": "dateTime",
            "writable": true
        },
        {
            "@type": "Property",
            "name": "validThrough",
            "displayName": "Valid through",
            "comment": "Required property",
            "schema": "dateTime",
            "writable": true
        },
        {
            "@type": "Property",
            "name": "period",
            "displayName": "Period",
            "description": "Property. Model:'https://schema.org/DateTime'. Type of period defined the date From and Through: A free text or a unique value of the different combination allowed 'season / offSeason' - 'summer / winter' - 'low / medium / high'. enum:'high, low, medium, offSeason, season, summer, winter'",
            "schema": "string",
            "writable": true
        }
    ],
    "@context": "dtmi:dtdl:context;2"
}